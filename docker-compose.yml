services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi-app
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
      - otel-collector
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: codebase_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector.yaml"]
    volumes:
      - ./monitoring/otel-collector.yaml:/etc/otel-collector.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
    depends_on:
      - tempo
      - loki
      - mimir

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./monitoring/loki-config.yaml:/etc/loki/config.yaml:ro
      - loki-data:/tmp/loki

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    ports:
      - "3200:3200"
      - "4318:4318"
    command: -config.file=/etc/tempo/local-config.yaml
    volumes:
      - ./monitoring/tempo-config.yaml:/etc/tempo/local-config.yaml:ro

  mimir:
    image: grafana/mimir:2.10.0
    container_name: mimir
    ports:
      - "9009:9009"  # HTTP
      - "8080:8080"  # Remote write / OTLP
    volumes:
      - ./monitoring/mimir-config.yaml:/etc/mimir/config.yaml:ro
    command: ["-config.file=/etc/mimir/config.yaml"]

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - otel-collector
      - loki
      - tempo
      - mimir

volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      device: ./volume/postgres-data
      o: bind

  grafana-data:
    driver: local
    driver_opts:
      type: none
      device: ./volume/grafana-data
      o: bind

  loki-data:
    driver: local
    driver_opts:
      type: none
      device: ./volume/loki-data
      o: bind
  